// <auto-generated />
using System;
using BarberAPI.Helpers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BarberAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210121181214_BarbershopBindMigration")]
    partial class BarbershopBindMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BarberAPI.Entities.Appointment", b =>
                {
                    b.Property<Guid>("Gd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BarberGd")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientGd")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Gd");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("BarberAPI.Entities.Barber", b =>
                {
                    b.Property<Guid>("Gd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BPrice")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HBPrice")
                        .HasColumnType("float");

                    b.Property<double>("HPrice")
                        .HasColumnType("float");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Gd");

                    b.ToTable("Barbers");
                });

            modelBuilder.Entity("BarberAPI.Entities.Barbershop", b =>
                {
                    b.Property<Guid>("Gd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOpened")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OwnerGd")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Shopname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Gd");

                    b.ToTable("Barbershops");
                });

            modelBuilder.Entity("BarberAPI.Entities.BarbershopBind", b =>
                {
                    b.Property<Guid>("Gd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BarberGd")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BarbershopGd")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("datetime2");

                    b.HasKey("Gd");

                    b.ToTable("BarbershopBinds");
                });

            modelBuilder.Entity("BarberAPI.Entities.BarbershopOwner", b =>
                {
                    b.Property<Guid>("Gd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AmountOfShops")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Gd");

                    b.ToTable("BarbershopOwners");
                });

            modelBuilder.Entity("BarberAPI.Entities.Client", b =>
                {
                    b.Property<Guid>("Gd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Gd");

                    b.ToTable("Clients");
                });
#pragma warning restore 612, 618
        }
    }
}
